@model DataShop.EF.Order

@{
    Layout = null;
    List<DataShop.EF.OrderDetail> cart = ViewBag.cart;
    List<DataShop.EF.Customer> user = ViewBag.user;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Xe đạp trực tuyến - Thanh toán online</title>
    <link rel="stylesheet" href="/Content/base.css">
    <link rel="stylesheet" href="/Content/ThanhToan.css?v=3.4.1">
</head>

<body>
    <div class="wrapper grid">
        <div class="info-delivery">
            <h2 class="header-text">Xe đạp Trực tuyến</h2>
            @*<p class="info-deli-text">Thông tin giao hàng</p>*@
            @if (user == null)
            {
                <p class="user-test">Bạn đã có tài khoản chưa? <a href="DangNhap">Đăng nhập</a></p>
            }
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h3>Thông tin giao hàng</h3>
                    <hr />

                    <div class="form-group">
                        @*Địa chỉ giao hàng*@
                        @Html.LabelFor(model => model.DeliveryAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.DeliveryAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DeliveryAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @*Số điện thoại*@
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @*Tên người nhận hàng*@
                        @Html.LabelFor(model => model.Recipient, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Recipient, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Recipient, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @*Chú ý*@
                        @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Thanh Toán" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="info-product">
            <table class="buyed-product table table-bordered">
                <tbody id="listCart">
                    @foreach (var item in cart)
                    {
                        <tr>
                            <td class="img-product"><img src="@item.Product.Image"></td>
                            <td class="name-product">
                                @item.Product.Title
                                <div class="color-product">@item.Product.Color</div>
                            </td>
                            <td>@item.Price ₫</td>
                            <td class="quantity">@item.Quantity</td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="code-sale">
                <input type="text" class="input-code" placeholder="Mã giảm giá">
                <button class="use-code">Sử dụng</button>
            </div>
            <div class="box-price">
                <p>Tạm tính</p>
                <p class="price-before spTong">@(cart.Sum(x=>x.Price*x.Quantity))₫</p>
            </div>
            <div class="pay-trans">
                <p>Phí vận chuyển</p>
                <p class="price-trans">—</p>
            </div>
            <div class="total-price">
                <p>Tổng cộng</p>
                <p class="price-after spTong"> @(cart.Sum(x=>x.Price*x.Quantity))₫</p>
            </div>
        </div>
    </div>
</body>
</html>
